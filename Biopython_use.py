# -*- coding: utf-8 -*-
"""biopython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MhTd3eGJuvN7QWvZldctGkffle3BsSf6
"""

pip install Bio

sequence_path="/content/sequence.fasta"

from Bio import SeqIO
import pandas as pd
import os

seq_object=SeqIO.read(sequence_path,"fasta")

type(seq_object)

count_T=seq_object.count('T')
count_A=seq_object.count('A')
count_G=seq_object.count('G')
count_C=seq_object.count('C')
number_seq=seq_object.count('>')

print(f"Number of G in sequence is {count_G} Number of A in sequence is {count_A} Number of T in sequence is {count_T} Number of C in sequence is {count_C} number of records is {number_seq}")

seq_object.description

seq_object.id

sequence=seq_object.seq
sequence.rfind("T")

len(sequence)

"""Opening files with multiple samples"""

path="/content/multi_fasta.fasta.txt"

"""Creating object to open fasta file."""

mul_obj=SeqIO.parse(path,"fasta")

"""Looping through mul_obj to read and store all data in an empty list"""

sequences=[]
for seq in mul_obj:
  sequences.append(seq)

"""Storing first fasta sequence in a variable first_record."""

first_record=sequences[0]

"""checking length of first seq."""

first_record.description

len(first_record)

"""Printing first record 50 base pairs."""

first_record.seq[:50]

"""Printing sequence ID, description, name  and length for every entry in sequences."""

for every in sequences:
  seq_id=every.id
  seq_name=every.name
  seq_des=every.description
  print(seq_id)
  print(seq_name)

seq_id=[]
seq_name=[]

for rec in sequences:
  seq_id.append(rec.id)
  seq_name.append(rec.name)
  seq_length=len(rec)

"""Making a pandas dataframe out of sequenc data."""

data=pd.DataFrame()

data["seq_id"]=seq_id
data["seq_name"]=seq_name
data["seq_length"]=seq_length

data.head()

"""Calculate the GC content of sequence."""

path="/content/sequence (1).fasta"

sequ_point=SeqIO.read(path,"fasta")

type(sequ_point)

len(sequ_point.seq)

from Bio.SeqUtils import gc_fraction

sequence=sequ_point.seq

gc_cont=gc_fraction(sequence)

print(gc_cont)

sequence2="ATACATACAGGGCAATAGCTCGCTCAGCTCGCTCCGATA"

gc_fraction(sequence2)*100

"""Checking GC content from a file having multiple record."""

filepath="/content/multi_fasta.fasta.txt"

sequence_object=SeqIO.parse(filepath,"fasta")

seq_multi=[seq for seq in sequence_object]

len(seq_multi)

for seq in seq_multi:
  print("GC content of")
  print(seq.id)
  print("is")
  print(gc_fraction(seq))

print(f"GC content of {seq_id} is {gc_content}")

seq_id=[]
gc_cont=[]
for seq in seq_multi:
  
  seq_id.append(seq.id)
  gc_cont.append(gc_fraction(seq))

df=pd.DataFrame()

df["Seq_ID"]=seq_id
df["GC_content"]=gc_cont

df.head()

output_dir="/content/Untitled Folder/GC_content.csv"

df.to_csv(output_dir,index=False)

